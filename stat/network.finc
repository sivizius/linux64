;( socket domain )
;{
  AF_UNSPEC                             =                                       0
  AF_UNIX                               =                                       1                                       ;Unix domain sockets
  AF_INET                               =                                       2                                       ;Internet IP Protocol
  AF_AX25                               =                                       3                                       ;Amateur Radio AX.25
  AF_IPX                                =                                       4                                       ;Novell IPX
  AF_APPLETALK                          =                                       5                                       ;Appletalk DDP
  AF_NETROM                             =                                       6                                       ;Amateur radio NetROM
  AF_BRIDGE                             =                                       7                                       ;Multiprotocol bridge
  AF_AAL5                               =                                       8                                       ;Reserved for Werner's ATM
  AF_X25                                =                                       9                                       ;Reserved for X.25 project
  AF_INET6                              =                                       10                                      ;IP version 6
  AF_MAX                                =                                       12                                      ;For now..
;}
;( socket types )
;{
  SOCKET_STREAM                         =                                       1                                       ;stream (connection) socket
  SOCKET_DGRAM                          =                                       2                                       ;datagram (conn.less) socket
  SOCKET_RAW                            =                                       3                                       ;raw socket
  SOCKET_RDM                            =                                       4                                       ;reliably-delivered message
  SOCKET_SEQPACKET                      =                                       5                                       ;sequential packet socket
  SOCKET_PACKET                         =                                       10                                      ;linux specific way of getting packets at the dev level.
                                                                                                                        ;For writing rarp and other similar things on the user level.
;}
;( socket level )
;{
  SOL_SOCKET                            =                                       1
;}
;( socket options )
;{
  SO_DEBUG                              =                                       1
  SO_REUSEADDR                          =                                       2
  SO_TYPE                               =                                       3
  SO_ERROR                              =                                       4
  SO_DONTROUTE                          =                                       5
  SO_BROADCAST                          =                                       6
  SO_SNDBUF                             =                                       7
  SO_RCVBUF                             =                                       8
  SO_KEEPALIVE                          =                                       9
  SO_OOBINLINE                          =                                       10
  SO_NO_CHECK                           =                                       11
  SO_PRIORITY                           =                                       12
  SO_LINGER                             =                                       13
  SO_BSDCOMPAT                          =                                       14
  SO_REUSEPORT                          =                                       15
  SO_PASSCRED                           =                                       16
  SO_PEERCRED                           =                                       17
  SO_RCVLOWAT                           =                                       18
  SO_SNDLOWAT                           =                                       19
  SO_RCVTIMEO                           =                                       20
  SO_SNDTIMEO                           =                                       21
  SO_SECURITY_AUTHENTICATION            =                                       22
  SO_SECURITY_ENCRYPTION_TRANSPORT      =                                       23
  SO_SECURITY_ENCRYPTION_NETWORK        =                                       24
  SO_BINDTODEVICE                       =                                       25
  SO_ATTACH_FILTER                      =                                       26
  SO_DETACH_FILTER                      =                                       27
  SO_GET_FILTER                         =                                       SO_ATTACH_FILTER
  SO_PEERNAME                           =                                       28
  SO_TIMESTAMP                          =                                       29
  SCM_TIMESTAMP                         =                                       SO_TIMESTAMP
  SO_ACCEPTCONN                         =                                       30
  SO_PEERSEC                            =                                       31
  SO_SNDBUFFORCE                        =                                       32
  SO_RCVBUFFORCE                        =                                       33
  SO_PASSSEC                            =                                       34
  SO_TIMESTAMPNS                        =                                       35
  SCM_TIMESTAMPNS                       =                                       SO_TIMESTAMPNS
  SO_MARK                               =                                       36
  SO_TIMESTAMPING                       =                                       37
  SCM_TIMESTAMPING                      =                                       SO_TIMESTAMPING
  SO_PROTOCOL                           =                                       38
  SO_DOMAIN                             =                                       39
  SO_RXQ_OVFL                           =                                       40
  SO_WIFI_STATUS                        =                                       41
  SCM_WIFI_STATUS                       =                                       SO_WIFI_STATUS
  SO_PEEK_OFF                           =                                       42
  SO_NOFCS                              =                                       43
  SO_LOCK_FILTER                        =                                       44
  SO_SELECT_ERR_QUEUE                   =                                       45
  SO_BUSY_POLL                          =                                       46
  SO_MAX_PACING_RATE                    =                                       47
  SO_BPF_EXTENSIONS                     =                                       48
;}

af_port@network                         equ                                     dword [ network.socket.af ]
ip@network                              equ                                     dword [ network.socket.ip ]
struc@network                           equ                                     ( network.socket )
struc@network.size                      =                                       16
macro socket@network                    domain,                                 type
{
  null                                  sys2arg
  mov                                   sys1arg,                                type
  mov                                   sys0arg,                                domain
  sys_call                              sys_socket
}
macro connect@network                   addr,                                   socket
{
  match , addr
  \{
    mov                                 sys2arg,                                ( 16 )
    lea                                 sys1arg,                                [ network.socket ]
  \}
  match any, addr
  \{
    mov                                 sys2arg,                                ( addr#.size )
    lea                                 sys1arg,                                [ addr ]
  \}
  match , socket
  \{
    mov                                 sys0arg,                                sys0ret
  \}
  match any, socket
  \{
    mov                                 sys0arg,                                socket
  \}
  sys_call                              sys_connect
}
macro send@network                      socket,                                 message,                                size
{
  local done
  done                                  equ
  null                                  sys5arg
  null                                  sys4arg
  null                                  sys3arg
  if ( sys1arg eq message )
  else
    match =[addr=], message
    \{
      match , size
      \\{
        mov                             sys2arg,                                ( addr\#.size )
        done                            equ                                     true
      \\}
      match =sys2arg, size
      \\{
        done                            equ                                     true
      \\}
      match , done
      \\{
        done                            equ
        match =[addr=], size
        \\\{
          done                          equ                                     true
          lea                           sys2arg,                                [ addr ]
        \\\}
        match , done
        \\\{
          mov                           sys2arg,                                size
        \\\}
      \\}
      done                              equ                                     true
      lea                               sys1arg,                                [ addr ]
    \}
    match , done
    \{
      if ( size eq sys2arg )
      else
        mov                             sys2arg,                                size
      end if
      mov                               sys1arg,                                message
    \}
  end if
  mov                                   sys0arg,                                socket
  sys_call                              sys_sendto
}
macro recv@network                      socket,                                 message,                                size
{
  local done
  done                                  equ
  null                                  sys5arg
  null                                  sys4arg
  null                                  sys3arg
  if ( sys1arg eq message )
  else
    match =[addr=], message
    \{
      match , size
      \\{
        mov                             sys2arg,                                ( addr\#.size )
        done                            equ                                     true
      \\}
      match =sys2arg, size
      \\{
        done                            equ                                     true
      \\}
      match , done
      \\{
        done                            equ
        match =[addr=], size
        \\\{
          done                          equ                                     true
          lea                           sys2arg,                                [ addr ]
        \\\}
        match , done
        \\\{
          mov                           sys2arg,                                size
        \\\}
      \\}
      done                              equ                                     true
      lea                               sys1arg,                                [ addr ]
    \}
    match , done
    \{
      if ( size eq sys2arg )
      else
        mov                             sys2arg,                                size
      end if
      mov                               sys1arg,                                message
    \}
  end if
  mov                                   sys0arg,                                socket
  sys_call                              sys_recvfrom
}
struc address@network                   af,                                     addr
{
  .                                     =                                       $
  match a=:b=:c=:d=/port, addr
  \{
    dw                                  af
    db                                  (( port shr 8 ) and 0xff )
    db                                  (( port shr 0 ) and 0xff )
    db                                  ( a and 0xff )
    db                                  ( b and 0xff )
    db                                  ( c and 0xff )
    db                                  ( d and 0xff )
    rq                                  1
  \}
  .size                                 =                                       ( $ - . )
  if ( .size = 0 )
    display "[asm:network] fail: invalid address in socketaddr!", 10
  end if
}
